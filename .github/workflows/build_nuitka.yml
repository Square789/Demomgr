name: Build nuitka distribution

on:
  push:
    branches:
      - 'master'
    tags:
      - 'v*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-windows:
    strategy:
      matrix:
        architecture: ['x86', 'x64']

    env:
      NUITKA_ASSUME_YES: 1
      NUITKA_COMPILER_USE_DEFAULT: 1
      BUILD_NAME: demomgr-win${{ matrix.architecture }}
      DEMOMGR_DIST_PATH: ./nuitka_build/demomgr.dist
      DEMOMGR_DIST_ZIP_PATH: ./nuitka_build/${{ BUILD_NAME }}.zip

    runs-on: windows-latest

    steps:
      # So much for the human readability
      - name: Generate variables
        id: vars
        run: >
          python -c '
          import os

          import re

          RE_SEMVER = re.compile("(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)(?:-((?:0|[1-9][0-9]*|[0-9]*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9][0-9]*|[0-9]*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$")\n

          arch = "${{ matrix.architecture }}"

          dist_path = "./nuitka_build/demomgr.dist"

          sv = RE_SEMVER.search("${{  }})"

          if sv is None:
           raise RuntimeError("Semver not found in github.ref!")

          build_name = f"demomgr_v{sv[0]}_win{arch}"

          zip_path = f"./nuitka_build/{build_name}.zip"

          for n, v in (("BUILD_NAME", "DEMOMGR_DIST_ZIP_PATH", "DEMOMGR_DIST_PATH"), (build_name, zip_path, dist_path)):
           print(f"::set-output name={n}::{v}")
          '

      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
          architecture: ${{ matrix.architecture }}

      - name: Install wheel, nuitka and dependencies
        run: |
          pip install wheel
          pip install nuitka
          pip install -r requirements.txt

      - name: Build
        run: python setup_nuitka.py

      - name: Zip
        run: >
          7z a -tzip
          ${{ steps.vars.outputs.DEMOMGR_DIST_ZIP_PATH }}
          ${{ steps.vars.outputs.DEMOMGR_DIST_PATH }}

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.vars.outputs.BUILD_NAME }}
          path: ${{ steps.vars.outputs.DEMOMGR_DIST_ZIP_PATH }}
